import requests\nimport re\nfrom datetime import datetime\nimport json\nimport json_repair\n\ndef query(API_URL, payload):\n    response = requests.post(API_URL, json=payload)\n    return response\n\ndef extract_json(response_text):\n    pattern = r"```json\\s*([\\[{].*?[\\]}])\\s*```"\n    match = re.search(pattern, response_text, re.DOTALL)\n    if match:\n        try:\n            obj = json.loads(match.group(1))\n        except:\n            obj = json_repair.loads(match.group(1))\n        return obj\n    else:\n        obj = json_repair.loads(response_text)\n        return obj\n    return None\n\ndef extract_section(text):\n    json_data = extract_json(text)\n    print(f"JSON data:\\n{json_data}")\n    results = {}\n    if json_data:\n        results["scores"] = {}\n        relevance12 = json_data["relevance12"]\n        results["scores"]["relevance12"] = relevance12\n        accuracy = json_data["accuracy"]\n        results["scores"]["accuracy"] = accuracy\n        completeness = json_data["completeness"]\n        results["scores"]["completeness"] = completeness\n        clarity = json_data["clarity"]\n        results["scores"]["clarity"] = clarity\n        tone = json_data["tone"]\n        results["scores"]["tone"] = tone\n        results["scores"]["average"] = (relevance12, accuracy, completeness, clarity, tone) / 5\n        results["comments"] = json_data["comments"]\n        print(f"Extracted: {results}")\n        return results\n    else:\n        return None